networks:
  monitoring_net:
    driver: bridge

volumes:
  mongo_data:
  redis_data:
  grafana_data:

services:
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    expose:
      - '27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - monitoring_net

  redis:
    image: redis:7.0
    restart: unless-stopped
    expose:
      - '6379'
    volumes:
      - redis_data:/data
    networks:
      - monitoring_net

  weather-service:
    image: ton-registry/weather-service:latest
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - CACHE_TTL_SECONDS=600
    depends_on:
      - redis
    networks:
      - monitoring_net

  pokedex-service:
    image: ton-registry/pokedex-service:latest
    restart: unless-stopped
    environment:
      - MONGO_URI=mongodb://mongo:27017/pokedex
      - WEATHER_SERVICE_URL=http://weather-service:4001
    depends_on:
      - mongo
      - weather-service
    networks:
      - monitoring_net

  prometheus:
    image: prom/prometheus:v2.48.0
    restart: unless-stopped
    expose:
      - '9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - weather-service
      - pokedex-service
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana:10.0.0
    restart: unless-stopped
    expose:
      - '3000'
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring_net

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - pokedex-service
      - grafana
    networks:
      - monitoring_net
